//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyaltyRepository.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RoyaltyRepository.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default account not found.
        /// </summary>
        public static string _DEFAULT_ACCOUNT_NOT_FOUND {
            get {
                return ResourceManager.GetString("_DEFAULT_ACCOUNT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude parameter length must be less or equals 250.
        /// </summary>
        public static string AccountDictionaryExcludeMaxLength {
            get {
                return ResourceManager.GetString("AccountDictionaryExcludeMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude parameter can&apos;t be empty.
        /// </summary>
        public static string AccountDictionaryExcludeMinLength {
            get {
                return ResourceManager.GetString("AccountDictionaryExcludeMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude parameter required.
        /// </summary>
        public static string AccountDictionaryExcludeRequired {
            get {
                return ResourceManager.GetString("AccountDictionaryExcludeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Account name length must be less or equals 250.
        /// </summary>
        public static string AccountNameMaxLength {
            get {
                return ResourceManager.GetString("AccountNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Account name can&apos;t be empty.
        /// </summary>
        public static string AccountNameRequired {
            get {
                return ResourceManager.GetString("AccountNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City name length must be less or equals 100.
        /// </summary>
        public static string CityNameMaxLength {
            get {
                return ResourceManager.GetString("CityNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City name can&apos;t be empty.
        /// </summary>
        public static string CityNameMinLength {
            get {
                return ResourceManager.GetString("CityNameMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City name required.
        /// </summary>
        public static string CityNameRequired {
            get {
                return ResourceManager.GetString("CityNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Column name can&apos;t be empty.
        /// </summary>
        public static string DataAdditionalColumnNameMaxLength {
            get {
                return ResourceManager.GetString("DataAdditionalColumnNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Column name length must be less or equals 250.
        /// </summary>
        public static string DataAdditionalColumnNameRequired {
            get {
                return ResourceManager.GetString("DataAdditionalColumnNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System column name can&apos;t be empty.
        /// </summary>
        public static string DataAdditionalColumnSystemNameMaxLength {
            get {
                return ResourceManager.GetString("DataAdditionalColumnSystemNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System column name length must be less or equals 250.
        /// </summary>
        public static string DataAdditionalColumnSystemNameRequired {
            get {
                return ResourceManager.GetString("DataAdditionalColumnSystemNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host name length must be less or equals 250.
        /// </summary>
        public static string HostNameMaxLength {
            get {
                return ResourceManager.GetString("HostNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host name can&apos;t be empty.
        /// </summary>
        public static string HostNameRequred {
            get {
                return ResourceManager.GetString("HostNameRequred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Half trusted.
        /// </summary>
        public static string MARK_HALFTRUSTED {
            get {
                return ResourceManager.GetString("MARK_HALFTRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Undefined.
        /// </summary>
        public static string MARK_NOTSETTED {
            get {
                return ResourceManager.GetString("MARK_NOTSETTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not trusted.
        /// </summary>
        public static string MARK_NOTTRUSTED {
            get {
                return ResourceManager.GetString("MARK_NOTTRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Suspicious.
        /// </summary>
        public static string MARK_SUSPICIOUS {
            get {
                return ResourceManager.GetString("MARK_SUSPICIOUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Trusted.
        /// </summary>
        public static string MARK_TRUSTED {
            get {
                return ResourceManager.GetString("MARK_TRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mark system name length must be less or equals 100.
        /// </summary>
        public static string MarkNameMaxLength {
            get {
                return ResourceManager.GetString("MarkNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mark system name can&apos;t be empty.
        /// </summary>
        public static string MarkNameMinLength {
            get {
                return ResourceManager.GetString("MarkNameMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mark system name required.
        /// </summary>
        public static string MarkNameRequred {
            get {
                return ResourceManager.GetString("MarkNameRequred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phone number length must be less or equals 20.
        /// </summary>
        public static string PhoneNumberMaxLength {
            get {
                return ResourceManager.GetString("PhoneNumberMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phone number can&apos;t be empty.
        /// </summary>
        public static string PhoneNumberMinLength {
            get {
                return ResourceManager.GetString("PhoneNumberMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phone number required.
        /// </summary>
        public static string PhoneNumberRequired {
            get {
                return ResourceManager.GetString("PhoneNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string QUEUERECORDSTATE_ERROR {
            get {
                return ResourceManager.GetString("QUEUERECORDSTATE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Processed.
        /// </summary>
        public static string QUEUERECORDSTATE_PROCESSED {
            get {
                return ResourceManager.GetString("QUEUERECORDSTATE_PROCESSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Try to proceed.
        /// </summary>
        public static string QUEUERECORDSTATE_TRYTOPROCESS {
            get {
                return ResourceManager.GetString("QUEUERECORDSTATE_TRYTOPROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wait.
        /// </summary>
        public static string QUEUERECORDSTATE_WAIT {
            get {
                return ResourceManager.GetString("QUEUERECORDSTATE_WAIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record state name length must be less or equals 20.
        /// </summary>
        public static string QueueRecordStateNameMaxLength {
            get {
                return ResourceManager.GetString("QueueRecordStateNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record state name required.
        /// </summary>
        public static string QueueRecordStateNameRequred {
            get {
                return ResourceManager.GetString("QueueRecordStateNameRequred", resourceCulture);
            }
        }
    }
}
