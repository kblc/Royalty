//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyaltyServiceWorker.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfImportQueueRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfguid))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.GuidExecutionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfguid))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.GuidExecutionResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfImportQueueRecordStateh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountDataRecordAdditionalColumnh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountDataRecordAdditionalColumnh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.LongExecutionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.LongExecutionResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountPhoneMarkh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfAccountPhoneMarkh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountPhoneMarkh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountSeriesOfNumbersRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSeriesOfNumbersRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsSheduleTimeh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsExportDirectoryh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsImportDirectoryh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsColumnh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfMarkh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfColumnTypeh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccounth3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccounth3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfImportQueueRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfImportQueueRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordResults))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfImportQueueRecordh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordResult))]
    public partial class BaseExecutionResultOfImportQueueRecordh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.ImportQueueRecord ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.ImportQueueRecord Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfImportQueueRecordh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfguid", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.GuidExecutionResult))]
    public partial class BaseExecutionResultOfguid : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuidExecutionResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class GuidExecutionResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfguid {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfguid", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.GuidExecutionResults))]
    public partial class BaseExecutionResultsOfguid : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Guid> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Guid> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuidExecutionResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class GuidExecutionResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfguid {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfImportQueueRecordStateh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults))]
    public partial class BaseExecutionResultsOfImportQueueRecordStateh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordState> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordState> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordStateResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordStateResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfImportQueueRecordStateh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfAccountDataRecordAdditionalColumnh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults))]
    public partial class BaseExecutionResultsOfAccountDataRecordAdditionalColumnh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDataRecordAdditionalColumnResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountDataRecordAdditionalColumnResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountDataRecordAdditionalColumnh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountDataRecordAdditionalColumnh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult))]
    public partial class BaseExecutionResultOfAccountDataRecordAdditionalColumnh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDataRecordAdditionalColumnResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountDataRecordAdditionalColumnResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountDataRecordAdditionalColumnh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOflong", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.LongExecutionResult))]
    public partial class BaseExecutionResultOflong : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LongExecutionResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class LongExecutionResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOflong {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOflong", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.LongExecutionResults))]
    public partial class BaseExecutionResultsOflong : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LongExecutionResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class LongExecutionResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOflong {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfAccountPhoneMarkh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfAccountPhoneMarkh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults))]
    public partial class BaseExecutionResultsOfAccountPhoneMarkh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountPhoneMark> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountPhoneMark> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasePagedExecutionResultsOfAccountPhoneMarkh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults))]
    public partial class BasePagedExecutionResultsOfAccountPhoneMarkh3e0gNRf : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountPhoneMarkh3e0gNRf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageIndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountPhoneMarkResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountPhoneMarkResults : RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfAccountPhoneMarkh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountPhoneMarkh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult))]
    public partial class BaseExecutionResultOfAccountPhoneMarkh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountPhoneMark ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountPhoneMark Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountPhoneMarkResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountPhoneMarkResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountPhoneMarkh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfAccountSeriesOfNumbersRecordh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults))]
    public partial class BaseExecutionResultsOfAccountSeriesOfNumbersRecordh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSeriesOfNumbersRecordResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSeriesOfNumbersRecordResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccountSeriesOfNumbersRecordh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSeriesOfNumbersRecordh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult))]
    public partial class BaseExecutionResultOfAccountSeriesOfNumbersRecordh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSeriesOfNumbersRecordResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSeriesOfNumbersRecordResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSeriesOfNumbersRecordh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSettingsSheduleTimeh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult))]
    public partial class BaseExecutionResultOfAccountSettingsSheduleTimeh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsSheduleTimeResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsSheduleTimeResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsSheduleTimeh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSettingsExportDirectoryh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult))]
    public partial class BaseExecutionResultOfAccountSettingsExportDirectoryh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsExportDirectoryResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsExportDirectoryResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsExportDirectoryh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSettingsImportDirectoryh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult))]
    public partial class BaseExecutionResultOfAccountSettingsImportDirectoryh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsImportDirectoryResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsImportDirectoryResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsImportDirectoryh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSettingsColumnh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult))]
    public partial class BaseExecutionResultOfAccountSettingsColumnh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettingsColumn ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumn Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsColumnsResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsColumnsResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsColumnh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfMarkh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults))]
    public partial class BaseExecutionResultsOfMarkh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.Mark> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.Mark> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsMarkResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsMarkResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfMarkh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfColumnTypeh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults))]
    public partial class BaseExecutionResultsOfColumnTypeh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ColumnType> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ColumnType> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsColumnTypeResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsColumnTypeResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfColumnTypeh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfAccounth3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountResults))]
    public partial class BaseExecutionResultsOfAccounth3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.Account> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.Account> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountResults : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfAccounth3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccounth3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountResult))]
    public partial class BaseExecutionResultOfAccounth3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.Account ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.Account Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccounth3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultOfAccountSettingsh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.AccountSettingsResult))]
    public partial class BaseExecutionResultOfAccountSettingsh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettings ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettings Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsResult", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsResult : RoyaltyServiceWorker.AccountService.BaseExecutionResultOfAccountSettingsh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseExecutionResultsOfImportQueueRecordh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfImportQueueRecordh3e0gNRf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordResults))]
    public partial class BaseExecutionResultsOfImportQueueRecordh3e0gNRf : RoyaltyServiceWorker.AccountService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecord> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecord> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasePagedExecutionResultsOfImportQueueRecordh3e0gNRf", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RoyaltyServiceWorker.AccountService.ImportQueueRecordResults))]
    public partial class BasePagedExecutionResultsOfImportQueueRecordh3e0gNRf : RoyaltyServiceWorker.AccountService.BaseExecutionResultsOfImportQueueRecordh3e0gNRf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageIndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordResults", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Services.Account.Result")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordResults : RoyaltyServiceWorker.AccountService.BasePagedExecutionResultsOfImportQueueRecordh3e0gNRf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecord", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileInfo> FileInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProcessedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileInfo> FileInfoes {
            get {
                return this.FileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileInfoesField, value) != true)) {
                    this.FileInfoesField = value;
                    this.RaisePropertyChanged("FileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasError {
            get {
                return this.HasErrorField;
            }
            set {
                if ((this.HasErrorField.Equals(value) != true)) {
                    this.HasErrorField = value;
                    this.RaisePropertyChanged("HasError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProcessedDate {
            get {
                return this.ProcessedDateField;
            }
            set {
                if ((this.ProcessedDateField.Equals(value) != true)) {
                    this.ProcessedDateField = value;
                    this.RaisePropertyChanged("ProcessedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordFileInfo", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileInfoFile> FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForAnalizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ImportQueueRecordStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ImportQueueRecordUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileAccountDataRecord> LoadedRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileInfoFile> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForAnalize {
            get {
                return this.ForAnalizeField;
            }
            set {
                if ((this.ForAnalizeField.Equals(value) != true)) {
                    this.ForAnalizeField = value;
                    this.RaisePropertyChanged("ForAnalize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ImportQueueRecordStateID {
            get {
                return this.ImportQueueRecordStateIDField;
            }
            set {
                if ((this.ImportQueueRecordStateIDField.Equals(value) != true)) {
                    this.ImportQueueRecordStateIDField = value;
                    this.RaisePropertyChanged("ImportQueueRecordStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ImportQueueRecordUID {
            get {
                return this.ImportQueueRecordUIDField;
            }
            set {
                if ((this.ImportQueueRecordUIDField.Equals(value) != true)) {
                    this.ImportQueueRecordUIDField = value;
                    this.RaisePropertyChanged("ImportQueueRecordUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.ImportQueueRecordFileAccountDataRecord> LoadedRecords {
            get {
                return this.LoadedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadedRecordsField, value) != true)) {
                    this.LoadedRecordsField = value;
                    this.RaisePropertyChanged("LoadedRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceFilePath {
            get {
                return this.SourceFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFilePathField, value) != true)) {
                    this.SourceFilePathField = value;
                    this.RaisePropertyChanged("SourceFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Started {
            get {
                return this.StartedField;
            }
            set {
                if ((this.StartedField.Equals(value) != true)) {
                    this.StartedField = value;
                    this.RaisePropertyChanged("Started");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordFileInfoFile", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordFileInfoFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FileUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ImportQueueRecordFileInfoUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeSystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileUID {
            get {
                return this.FileUIDField;
            }
            set {
                if ((this.FileUIDField.Equals(value) != true)) {
                    this.FileUIDField = value;
                    this.RaisePropertyChanged("FileUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ImportQueueRecordFileInfoUID {
            get {
                return this.ImportQueueRecordFileInfoUIDField;
            }
            set {
                if ((this.ImportQueueRecordFileInfoUIDField.Equals(value) != true)) {
                    this.ImportQueueRecordFileInfoUIDField = value;
                    this.RaisePropertyChanged("ImportQueueRecordFileInfoUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeSystemName {
            get {
                return this.TypeSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeSystemNameField, value) != true)) {
                    this.TypeSystemNameField = value;
                    this.RaisePropertyChanged("TypeSystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordFileAccountDataRecord", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordFileAccountDataRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountDataRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ImportQueueRecordFileInfoUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountDataRecordID {
            get {
                return this.AccountDataRecordIDField;
            }
            set {
                if ((this.AccountDataRecordIDField.Equals(value) != true)) {
                    this.AccountDataRecordIDField = value;
                    this.RaisePropertyChanged("AccountDataRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ImportQueueRecordFileInfoUID {
            get {
                return this.ImportQueueRecordFileInfoUIDField;
            }
            set {
                if ((this.ImportQueueRecordFileInfoUIDField.Equals(value) != true)) {
                    this.ImportQueueRecordFileInfoUIDField = value;
                    this.RaisePropertyChanged("ImportQueueRecordFileInfoUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoadDate {
            get {
                return this.LoadDateField;
            }
            set {
                if ((this.LoadDateField.Equals(value) != true)) {
                    this.LoadDateField = value;
                    this.RaisePropertyChanged("LoadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueueRecordState", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueueRecordState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDataRecordAdditionalColumn", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountDataRecordAdditionalColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnSystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnSystemName {
            get {
                return this.ColumnSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnSystemNameField, value) != true)) {
                    this.ColumnSystemNameField = value;
                    this.RaisePropertyChanged("ColumnSystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Export {
            get {
                return this.ExportField;
            }
            set {
                if ((this.ExportField.Equals(value) != true)) {
                    this.ExportField = value;
                    this.RaisePropertyChanged("Export");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountPhoneMark", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountPhoneMark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MarkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MarkID {
            get {
                return this.MarkIDField;
            }
            set {
                if ((this.MarkIDField.Equals(value) != true)) {
                    this.MarkIDField = value;
                    this.RaisePropertyChanged("MarkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSeriesOfNumbersRecord", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSeriesOfNumbersRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DigitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Delay {
            get {
                return this.DelayField;
            }
            set {
                if ((this.DelayField.Equals(value) != true)) {
                    this.DelayField = value;
                    this.RaisePropertyChanged("Delay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DigitCount {
            get {
                return this.DigitCountField;
            }
            set {
                if ((this.DigitCountField.Equals(value) != true)) {
                    this.DigitCountField = value;
                    this.RaisePropertyChanged("DigitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsSheduleTime", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsSheduleTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsExportDirectory", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsExportDirectory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectoryPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncodingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecuteAfterAnalizeCommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MarkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeoutForExecuteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectoryPath {
            get {
                return this.DirectoryPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryPathField, value) != true)) {
                    this.DirectoryPathField = value;
                    this.RaisePropertyChanged("DirectoryPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncodingName {
            get {
                return this.EncodingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodingNameField, value) != true)) {
                    this.EncodingNameField = value;
                    this.RaisePropertyChanged("EncodingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecuteAfterAnalizeCommand {
            get {
                return this.ExecuteAfterAnalizeCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecuteAfterAnalizeCommandField, value) != true)) {
                    this.ExecuteAfterAnalizeCommandField = value;
                    this.RaisePropertyChanged("ExecuteAfterAnalizeCommand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MarkID {
            get {
                return this.MarkIDField;
            }
            set {
                if ((this.MarkIDField.Equals(value) != true)) {
                    this.MarkIDField = value;
                    this.RaisePropertyChanged("MarkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeoutForExecute {
            get {
                return this.TimeoutForExecuteField;
            }
            set {
                if ((this.TimeoutForExecuteField.Equals(value) != true)) {
                    this.TimeoutForExecuteField = value;
                    this.RaisePropertyChanged("TimeoutForExecute");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsImportDirectory", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsImportDirectory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteFileAfterImportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncodingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForAnalizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecursiveFolderSearchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteFileAfterImport {
            get {
                return this.DeleteFileAfterImportField;
            }
            set {
                if ((this.DeleteFileAfterImportField.Equals(value) != true)) {
                    this.DeleteFileAfterImportField = value;
                    this.RaisePropertyChanged("DeleteFileAfterImport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncodingName {
            get {
                return this.EncodingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodingNameField, value) != true)) {
                    this.EncodingNameField = value;
                    this.RaisePropertyChanged("EncodingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForAnalize {
            get {
                return this.ForAnalizeField;
            }
            set {
                if ((this.ForAnalizeField.Equals(value) != true)) {
                    this.ForAnalizeField = value;
                    this.RaisePropertyChanged("ForAnalize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecursiveFolderSearch {
            get {
                return this.RecursiveFolderSearchField;
            }
            set {
                if ((this.RecursiveFolderSearchField.Equals(value) != true)) {
                    this.RecursiveFolderSearchField = value;
                    this.RaisePropertyChanged("RecursiveFolderSearch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettingsColumn", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSettingsColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ColumnTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountUID {
            get {
                return this.AccountUIDField;
            }
            set {
                if ((this.AccountUIDField.Equals(value) != true)) {
                    this.AccountUIDField = value;
                    this.RaisePropertyChanged("AccountUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ColumnTypeID {
            get {
                return this.ColumnTypeIDField;
            }
            set {
                if ((this.ColumnTypeIDField.Equals(value) != true)) {
                    this.ColumnTypeIDField = value;
                    this.RaisePropertyChanged("ColumnTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mark", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class Mark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColumnType", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class ColumnType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExportColumnIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImportRowValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImportTableValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Export {
            get {
                return this.ExportField;
            }
            set {
                if ((this.ExportField.Equals(value) != true)) {
                    this.ExportField = value;
                    this.RaisePropertyChanged("Export");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExportColumnIndex {
            get {
                return this.ExportColumnIndexField;
            }
            set {
                if ((this.ExportColumnIndexField.Equals(value) != true)) {
                    this.ExportColumnIndexField = value;
                    this.RaisePropertyChanged("ExportColumnIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImportRowValidation {
            get {
                return this.ImportRowValidationField;
            }
            set {
                if ((this.ImportRowValidationField.Equals(value) != true)) {
                    this.ImportRowValidationField = value;
                    this.RaisePropertyChanged("ImportRowValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImportTableValidation {
            get {
                return this.ImportTableValidationField;
            }
            set {
                if ((this.ImportTableValidationField.Equals(value) != true)) {
                    this.ImportTableValidationField = value;
                    this.RaisePropertyChanged("ImportTableValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBusyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RoyaltyServiceWorker.AccountService.AccountSettings SettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBusy {
            get {
                return this.IsBusyField;
            }
            set {
                if ((this.IsBusyField.Equals(value) != true)) {
                    this.IsBusyField = value;
                    this.RaisePropertyChanged("IsBusy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((this.IsHiddenField.Equals(value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RoyaltyServiceWorker.AccountService.AccountSettings Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettings", Namespace="http://schemas.datacontract.org/2004/07/RoyaltyService.Model")]
    [System.SerializableAttribute()]
    public partial class AccountSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsColumn> ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory> ExportDirectoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> IgnoreExportTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory> ImportDirectoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime> SheduleTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeForTrustField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsColumn> Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory> ExportDirectories {
            get {
                return this.ExportDirectoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportDirectoriesField, value) != true)) {
                    this.ExportDirectoriesField = value;
                    this.RaisePropertyChanged("ExportDirectories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> IgnoreExportTime {
            get {
                return this.IgnoreExportTimeField;
            }
            set {
                if ((this.IgnoreExportTimeField.Equals(value) != true)) {
                    this.IgnoreExportTimeField = value;
                    this.RaisePropertyChanged("IgnoreExportTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory> ImportDirectories {
            get {
                return this.ImportDirectoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportDirectoriesField, value) != true)) {
                    this.ImportDirectoriesField = value;
                    this.RaisePropertyChanged("ImportDirectories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime> SheduleTimes {
            get {
                return this.SheduleTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.SheduleTimesField, value) != true)) {
                    this.SheduleTimesField = value;
                    this.RaisePropertyChanged("SheduleTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeForTrust {
            get {
                return this.TimeForTrustField;
            }
            set {
                if ((this.TimeForTrustField.Equals(value) != true)) {
                    this.TimeForTrustField = value;
                    this.RaisePropertyChanged("TimeForTrust");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountServiceREST")]
    public interface IAccountServiceREST {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBaseService/ChangeLanguage")]
        void ChangeLanguage(string codename);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBaseService/ChangeLanguage")]
        System.Threading.Tasks.Task ChangeLanguageAsync(string codename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetImportQueueRecords", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetImportQueueRecordsResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordResults RESTGetImportQueueRecords(string accountId, string from, string to, string pageIndex, string itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetImportQueueRecords", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetImportQueueRecordsResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResults> RESTGetImportQueueRecordsAsync(string accountId, string from, string to, string pageIndex, string itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutImportQueueRecord", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutImportQueueRecordResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordResult RESTPutImportQueueRecord(RoyaltyServiceWorker.AccountService.ImportQueueRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutImportQueueRecord", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutImportQueueRecordResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResult> RESTPutImportQueueRecordAsync(RoyaltyServiceWorker.AccountService.ImportQueueRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemovemportQueueRecord", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemovemportQueueRecordResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResult RESTRemovemportQueueRecord(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemovemportQueueRecord", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemovemportQueueRecordResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RESTRemovemportQueueRecordAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveImportQueueRecordRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveImportQueueRecordRangeResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResults RESTRemoveImportQueueRecordRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveImportQueueRecordRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveImportQueueRecordRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RESTRemoveImportQueueRecordRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTImportQueueRecordStates", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTImportQueueRecordStatesResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults RESTImportQueueRecordStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTImportQueueRecordStates", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTImportQueueRecordStatesResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults> RESTImportQueueRecordStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAdditionalColumns", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAdditionalColumnsResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults RESTGetAdditionalColumns(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAdditionalColumns", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAdditionalColumnsResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults> RESTGetAdditionalColumnsAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult RESTPutAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> RESTPutAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult RESTUpdateAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> RESTUpdateAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveAdditionalColumn(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumn", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveAdditionalColumnAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnsRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnsRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveAdditionalColumnsRange(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnsRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAdditionalColumnsRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveAdditionalColumnsRangeAsync(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults RESTGetAccountPhoneMark(string accountId, string filter, string pageIndex, string itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults> RESTGetAccountPhoneMarkAsync(string accountId, string filter, string pageIndex, string itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult RESTPutAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> RESTPutAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult RESTUpdateAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> RESTUpdateAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveAccountPhoneMark(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveAccountPhoneMarkAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveAccountPhoneMarkRange(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveAccountPhoneMarkRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveAccountPhoneMarkRangeAsync(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults RESTGetSeriesOfNumbers(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults> RESTGetSeriesOfNumbersAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult RESTPutSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPutSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> RESTPutSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult RESTUpdateSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdateSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> RESTUpdateSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveSeriesOfNumbers(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveSeriesOfNumbersAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveSeriesOfNumbersRange(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveSeriesOfNumbersRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveSeriesOfNumbersRangeAsync(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimePut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimePutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult RESTSettingsSheduleTimePut(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimePut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimePutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> RESTSettingsSheduleTimePutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult RESTSettingsSheduleTimeUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> RESTSettingsSheduleTimeUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsSheduleTimeRemove(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsSheduleTimeRemoveAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveRangeResponse" +
            "")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsSheduleTimeRemoveRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsSheduleTimeRemoveRangeResponse" +
            "")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsSheduleTimeRemoveRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult RESTSettingsExportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> RESTSettingsExportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult RESTSettingsExportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> RESTSettingsExportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsExportDirectoryRemove(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsExportDirectoryRemoveAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveRangeResp" +
            "onse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsExportDirectoryRemoveRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsExportDirectoryRemoveRangeResp" +
            "onse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsExportDirectoryRemoveRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult RESTSettingsImportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> RESTSettingsImportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult RESTSettingsImportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> RESTSettingsImportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsImportDirectoryRemove(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsImportDirectoryRemoveAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveRangeResp" +
            "onse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsImportDirectoryRemoveRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsImportDirectoryRemoveRangeResp" +
            "onse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsImportDirectoryRemoveRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult RESTSettingsColumnPut(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> RESTSettingsColumnPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult RESTSettingsColumnUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> RESTSettingsColumnUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsColumnRemove(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsColumnRemoveAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsColumnRemoveRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTSettingsColumnRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsColumnRemoveRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetColumnMarks", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetColumnMarksResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults RESTGetColumnMarks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetColumnMarks", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetColumnMarksResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults> RESTGetColumnMarksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetColumnTypes", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetColumnTypesResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults RESTGetColumnTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetColumnTypes", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetColumnTypesResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults> RESTGetColumnTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAll", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAllResponse")]
        RoyaltyServiceWorker.AccountService.AccountResults RESTGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetAll", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetAllResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> RESTGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGet", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult RESTGet(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGet", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTGetAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetRangeResponse")]
        RoyaltyServiceWorker.AccountService.AccountResults RESTGetRange(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTGetRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTGetRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> RESTGetRangeAsync(System.Collections.Generic.List<string> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult RESTPut(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTPut", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTPutAsync(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult RESTUpdate(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTUpdate", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTUpdateAsync(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResult RESTRemove(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemove", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RESTRemoveAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResults RESTRemoveRange(System.Collections.Generic.List<string> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServiceREST/RESTRemoveRange", ReplyAction="http://tempuri.org/IAccountServiceREST/RESTRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RESTRemoveRangeAsync(System.Collections.Generic.List<string> identifier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceRESTChannel : RoyaltyServiceWorker.AccountService.IAccountServiceREST, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceRESTClient : System.ServiceModel.ClientBase<RoyaltyServiceWorker.AccountService.IAccountServiceREST>, RoyaltyServiceWorker.AccountService.IAccountServiceREST {
        
        public AccountServiceRESTClient() {
        }
        
        public AccountServiceRESTClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceRESTClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceRESTClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceRESTClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ChangeLanguage(string codename) {
            base.Channel.ChangeLanguage(codename);
        }
        
        public System.Threading.Tasks.Task ChangeLanguageAsync(string codename) {
            return base.Channel.ChangeLanguageAsync(codename);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordResults RESTGetImportQueueRecords(string accountId, string from, string to, string pageIndex, string itemsPerPage) {
            return base.Channel.RESTGetImportQueueRecords(accountId, from, to, pageIndex, itemsPerPage);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResults> RESTGetImportQueueRecordsAsync(string accountId, string from, string to, string pageIndex, string itemsPerPage) {
            return base.Channel.RESTGetImportQueueRecordsAsync(accountId, from, to, pageIndex, itemsPerPage);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordResult RESTPutImportQueueRecord(RoyaltyServiceWorker.AccountService.ImportQueueRecord item) {
            return base.Channel.RESTPutImportQueueRecord(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResult> RESTPutImportQueueRecordAsync(RoyaltyServiceWorker.AccountService.ImportQueueRecord item) {
            return base.Channel.RESTPutImportQueueRecordAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResult RESTRemovemportQueueRecord(string identifier) {
            return base.Channel.RESTRemovemportQueueRecord(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RESTRemovemportQueueRecordAsync(string identifier) {
            return base.Channel.RESTRemovemportQueueRecordAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResults RESTRemoveImportQueueRecordRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTRemoveImportQueueRecordRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RESTRemoveImportQueueRecordRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTRemoveImportQueueRecordRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults RESTImportQueueRecordStates() {
            return base.Channel.RESTImportQueueRecordStates();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults> RESTImportQueueRecordStatesAsync() {
            return base.Channel.RESTImportQueueRecordStatesAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults RESTGetAdditionalColumns(string accountId) {
            return base.Channel.RESTGetAdditionalColumns(accountId);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults> RESTGetAdditionalColumnsAsync(string accountId) {
            return base.Channel.RESTGetAdditionalColumnsAsync(accountId);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult RESTPutAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.RESTPutAdditionalColumn(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> RESTPutAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.RESTPutAdditionalColumnAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult RESTUpdateAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.RESTUpdateAdditionalColumn(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> RESTUpdateAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.RESTUpdateAdditionalColumnAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveAdditionalColumn(string identifier) {
            return base.Channel.RESTRemoveAdditionalColumn(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveAdditionalColumnAsync(string identifier) {
            return base.Channel.RESTRemoveAdditionalColumnAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveAdditionalColumnsRange(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveAdditionalColumnsRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveAdditionalColumnsRangeAsync(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveAdditionalColumnsRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults RESTGetAccountPhoneMark(string accountId, string filter, string pageIndex, string itemsPerPage) {
            return base.Channel.RESTGetAccountPhoneMark(accountId, filter, pageIndex, itemsPerPage);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults> RESTGetAccountPhoneMarkAsync(string accountId, string filter, string pageIndex, string itemsPerPage) {
            return base.Channel.RESTGetAccountPhoneMarkAsync(accountId, filter, pageIndex, itemsPerPage);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult RESTPutAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.RESTPutAccountPhoneMark(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> RESTPutAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.RESTPutAccountPhoneMarkAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult RESTUpdateAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.RESTUpdateAccountPhoneMark(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> RESTUpdateAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.RESTUpdateAccountPhoneMarkAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveAccountPhoneMark(string identifier) {
            return base.Channel.RESTRemoveAccountPhoneMark(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveAccountPhoneMarkAsync(string identifier) {
            return base.Channel.RESTRemoveAccountPhoneMarkAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveAccountPhoneMarkRange(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveAccountPhoneMarkRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveAccountPhoneMarkRangeAsync(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveAccountPhoneMarkRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults RESTGetSeriesOfNumbers(string accountId) {
            return base.Channel.RESTGetSeriesOfNumbers(accountId);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults> RESTGetSeriesOfNumbersAsync(string accountId) {
            return base.Channel.RESTGetSeriesOfNumbersAsync(accountId);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult RESTPutSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.RESTPutSeriesOfNumbers(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> RESTPutSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.RESTPutSeriesOfNumbersAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult RESTUpdateSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.RESTUpdateSeriesOfNumbers(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> RESTUpdateSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.RESTUpdateSeriesOfNumbersAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTRemoveSeriesOfNumbers(string identifier) {
            return base.Channel.RESTRemoveSeriesOfNumbers(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTRemoveSeriesOfNumbersAsync(string identifier) {
            return base.Channel.RESTRemoveSeriesOfNumbersAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTRemoveSeriesOfNumbersRange(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveSeriesOfNumbersRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTRemoveSeriesOfNumbersRangeAsync(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveSeriesOfNumbersRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult RESTSettingsSheduleTimePut(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.RESTSettingsSheduleTimePut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> RESTSettingsSheduleTimePutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.RESTSettingsSheduleTimePutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult RESTSettingsSheduleTimeUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.RESTSettingsSheduleTimeUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> RESTSettingsSheduleTimeUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.RESTSettingsSheduleTimeUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsSheduleTimeRemove(string identifier) {
            return base.Channel.RESTSettingsSheduleTimeRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsSheduleTimeRemoveAsync(string identifier) {
            return base.Channel.RESTSettingsSheduleTimeRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsSheduleTimeRemoveRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsSheduleTimeRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsSheduleTimeRemoveRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsSheduleTimeRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult RESTSettingsExportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.RESTSettingsExportDirectoryPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> RESTSettingsExportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.RESTSettingsExportDirectoryPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult RESTSettingsExportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.RESTSettingsExportDirectoryUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> RESTSettingsExportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.RESTSettingsExportDirectoryUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsExportDirectoryRemove(string identifier) {
            return base.Channel.RESTSettingsExportDirectoryRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsExportDirectoryRemoveAsync(string identifier) {
            return base.Channel.RESTSettingsExportDirectoryRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsExportDirectoryRemoveRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsExportDirectoryRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsExportDirectoryRemoveRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsExportDirectoryRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult RESTSettingsImportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.RESTSettingsImportDirectoryPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> RESTSettingsImportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.RESTSettingsImportDirectoryPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult RESTSettingsImportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.RESTSettingsImportDirectoryUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> RESTSettingsImportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.RESTSettingsImportDirectoryUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsImportDirectoryRemove(string identifier) {
            return base.Channel.RESTSettingsImportDirectoryRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsImportDirectoryRemoveAsync(string identifier) {
            return base.Channel.RESTSettingsImportDirectoryRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsImportDirectoryRemoveRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsImportDirectoryRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsImportDirectoryRemoveRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsImportDirectoryRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult RESTSettingsColumnPut(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.RESTSettingsColumnPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> RESTSettingsColumnPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.RESTSettingsColumnPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult RESTSettingsColumnUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.RESTSettingsColumnUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> RESTSettingsColumnUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.RESTSettingsColumnUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RESTSettingsColumnRemove(string identifier) {
            return base.Channel.RESTSettingsColumnRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RESTSettingsColumnRemoveAsync(string identifier) {
            return base.Channel.RESTSettingsColumnRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RESTSettingsColumnRemoveRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsColumnRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RESTSettingsColumnRemoveRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTSettingsColumnRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults RESTGetColumnMarks() {
            return base.Channel.RESTGetColumnMarks();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults> RESTGetColumnMarksAsync() {
            return base.Channel.RESTGetColumnMarksAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults RESTGetColumnTypes() {
            return base.Channel.RESTGetColumnTypes();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults> RESTGetColumnTypesAsync() {
            return base.Channel.RESTGetColumnTypesAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResults RESTGetAll() {
            return base.Channel.RESTGetAll();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> RESTGetAllAsync() {
            return base.Channel.RESTGetAllAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult RESTGet(string identifier) {
            return base.Channel.RESTGet(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTGetAsync(string identifier) {
            return base.Channel.RESTGetAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResults RESTGetRange(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTGetRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> RESTGetRangeAsync(System.Collections.Generic.List<string> identifiers) {
            return base.Channel.RESTGetRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult RESTPut(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.RESTPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTPutAsync(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.RESTPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult RESTUpdate(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.RESTUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> RESTUpdateAsync(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.RESTUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResult RESTRemove(string identifier) {
            return base.Channel.RESTRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RESTRemoveAsync(string identifier) {
            return base.Channel.RESTRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResults RESTRemoveRange(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RESTRemoveRangeAsync(System.Collections.Generic.List<string> identifier) {
            return base.Channel.RESTRemoveRangeAsync(identifier);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBaseService/ChangeLanguage")]
        void ChangeLanguage(string codename);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBaseService/ChangeLanguage")]
        System.Threading.Tasks.Task ChangeLanguageAsync(string codename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetImportQueueRecords", ReplyAction="http://tempuri.org/IAccountService/GetImportQueueRecordsResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordResults GetImportQueueRecords(System.Guid accountId, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, uint pageIndex, uint itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetImportQueueRecords", ReplyAction="http://tempuri.org/IAccountService/GetImportQueueRecordsResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResults> GetImportQueueRecordsAsync(System.Guid accountId, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, uint pageIndex, uint itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutImportQueueRecord", ReplyAction="http://tempuri.org/IAccountService/PutImportQueueRecordResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordResult PutImportQueueRecord(RoyaltyServiceWorker.AccountService.ImportQueueRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutImportQueueRecord", ReplyAction="http://tempuri.org/IAccountService/PutImportQueueRecordResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResult> PutImportQueueRecordAsync(RoyaltyServiceWorker.AccountService.ImportQueueRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemovemportQueueRecord", ReplyAction="http://tempuri.org/IAccountService/RemovemportQueueRecordResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResult RemovemportQueueRecord(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemovemportQueueRecord", ReplyAction="http://tempuri.org/IAccountService/RemovemportQueueRecordResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RemovemportQueueRecordAsync(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveImportQueueRecordRange", ReplyAction="http://tempuri.org/IAccountService/RemoveImportQueueRecordRangeResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResults RemoveImportQueueRecordRange(System.Collections.Generic.List<System.Guid> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveImportQueueRecordRange", ReplyAction="http://tempuri.org/IAccountService/RemoveImportQueueRecordRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RemoveImportQueueRecordRangeAsync(System.Collections.Generic.List<System.Guid> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ImportQueueRecordStates", ReplyAction="http://tempuri.org/IAccountService/ImportQueueRecordStatesResponse")]
        RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults ImportQueueRecordStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ImportQueueRecordStates", ReplyAction="http://tempuri.org/IAccountService/ImportQueueRecordStatesResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults> ImportQueueRecordStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAdditionalColumns", ReplyAction="http://tempuri.org/IAccountService/GetAdditionalColumnsResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults GetAdditionalColumns(System.Guid accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAdditionalColumns", ReplyAction="http://tempuri.org/IAccountService/GetAdditionalColumnsResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults> GetAdditionalColumnsAsync(System.Guid accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/PutAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult PutAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/PutAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> PutAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/UpdateAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult UpdateAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/UpdateAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> UpdateAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/RemoveAdditionalColumnResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveAdditionalColumn(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAdditionalColumn", ReplyAction="http://tempuri.org/IAccountService/RemoveAdditionalColumnResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveAdditionalColumnAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAdditionalColumnsRange", ReplyAction="http://tempuri.org/IAccountService/RemoveAdditionalColumnsRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveAdditionalColumnsRange(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAdditionalColumnsRange", ReplyAction="http://tempuri.org/IAccountService/RemoveAdditionalColumnsRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveAdditionalColumnsRangeAsync(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/GetAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults GetAccountPhoneMark(System.Guid accountId, string filter, uint pageIndex, uint itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/GetAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults> GetAccountPhoneMarkAsync(System.Guid accountId, string filter, uint pageIndex, uint itemsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/PutAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult PutAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/PutAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> PutAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult UpdateAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> UpdateAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveAccountPhoneMark(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountPhoneMark", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveAccountPhoneMarkAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkRange", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveAccountPhoneMarkRange(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkRange", ReplyAction="http://tempuri.org/IAccountService/RemoveAccountPhoneMarkRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveAccountPhoneMarkRangeAsync(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/GetSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults GetSeriesOfNumbers(System.Guid accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/GetSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults> GetSeriesOfNumbersAsync(System.Guid accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/PutSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult PutSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/PutSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/PutSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> PutSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/UpdateSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult UpdateSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/UpdateSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> UpdateSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveSeriesOfNumbers(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveSeriesOfNumbers", ReplyAction="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveSeriesOfNumbersAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersRange", ReplyAction="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveSeriesOfNumbersRange(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersRange", ReplyAction="http://tempuri.org/IAccountService/RemoveSeriesOfNumbersRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveSeriesOfNumbersRangeAsync(System.Collections.Generic.List<long> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RESTSettingsUpdate", ReplyAction="http://tempuri.org/IAccountService/RESTSettingsUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsResult RESTSettingsUpdate(RoyaltyServiceWorker.AccountService.AccountSettings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RESTSettingsUpdate", ReplyAction="http://tempuri.org/IAccountService/RESTSettingsUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsResult> RESTSettingsUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsResult SettingsUpdate(RoyaltyServiceWorker.AccountService.AccountSettings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsResult> SettingsUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettings item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimePut", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimePutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult SettingsSheduleTimePut(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimePut", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimePutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> SettingsSheduleTimePutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult SettingsSheduleTimeUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> SettingsSheduleTimeUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsSheduleTimeRemove(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsSheduleTimeRemoveAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsSheduleTimeRemoveRange(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsSheduleTimeRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsSheduleTimeRemoveRangeAsync(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryPut", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult SettingsExportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryPut", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> SettingsExportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult SettingsExportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> SettingsExportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsExportDirectoryRemove(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsExportDirectoryRemoveAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsExportDirectoryRemoveRange(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsExportDirectoryRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsExportDirectoryRemoveRangeAsync(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryPut", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult SettingsImportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryPut", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> SettingsImportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult SettingsImportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> SettingsImportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsImportDirectoryRemove(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsImportDirectoryRemoveAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsImportDirectoryRemoveRange(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsImportDirectoryRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsImportDirectoryRemoveRangeAsync(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnPut", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnPutResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult SettingsColumnPut(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnPut", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnPutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> SettingsColumnPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnUpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult SettingsColumnUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnUpdate", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnUpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> SettingsColumnUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnRemoveResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsColumnRemove(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnRemove", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnRemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsColumnRemoveAsync(long identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnRemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsColumnRemoveRange(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SettingsColumnRemoveRange", ReplyAction="http://tempuri.org/IAccountService/SettingsColumnRemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsColumnRemoveRangeAsync(System.Collections.Generic.List<long> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetColumnMarks", ReplyAction="http://tempuri.org/IAccountService/GetColumnMarksResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults GetColumnMarks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetColumnMarks", ReplyAction="http://tempuri.org/IAccountService/GetColumnMarksResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults> GetColumnMarksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetColumnTypes", ReplyAction="http://tempuri.org/IAccountService/GetColumnTypesResponse")]
        RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults GetColumnTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetColumnTypes", ReplyAction="http://tempuri.org/IAccountService/GetColumnTypesResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults> GetColumnTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAll", ReplyAction="http://tempuri.org/IAccountService/GetAllResponse")]
        RoyaltyServiceWorker.AccountService.AccountResults GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAll", ReplyAction="http://tempuri.org/IAccountService/GetAllResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Get", ReplyAction="http://tempuri.org/IAccountService/GetResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult Get(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Get", ReplyAction="http://tempuri.org/IAccountService/GetResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> GetAsync(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetRange", ReplyAction="http://tempuri.org/IAccountService/GetRangeResponse")]
        RoyaltyServiceWorker.AccountService.AccountResults GetRange(System.Collections.Generic.List<System.Guid> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetRange", ReplyAction="http://tempuri.org/IAccountService/GetRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> GetRangeAsync(System.Collections.Generic.List<System.Guid> identifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Put", ReplyAction="http://tempuri.org/IAccountService/PutResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult Put(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Put", ReplyAction="http://tempuri.org/IAccountService/PutResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> PutAsync(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Update", ReplyAction="http://tempuri.org/IAccountService/UpdateResponse")]
        RoyaltyServiceWorker.AccountService.AccountResult Update(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Update", ReplyAction="http://tempuri.org/IAccountService/UpdateResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> UpdateAsync(RoyaltyServiceWorker.AccountService.Account item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Remove", ReplyAction="http://tempuri.org/IAccountService/RemoveResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResult Remove(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Remove", ReplyAction="http://tempuri.org/IAccountService/RemoveResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RemoveAsync(System.Guid identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveRange", ReplyAction="http://tempuri.org/IAccountService/RemoveRangeResponse")]
        RoyaltyServiceWorker.AccountService.GuidExecutionResults RemoveRange(System.Collections.Generic.List<System.Guid> identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RemoveRange", ReplyAction="http://tempuri.org/IAccountService/RemoveRangeResponse")]
        System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RemoveRangeAsync(System.Collections.Generic.List<System.Guid> identifier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : RoyaltyServiceWorker.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<RoyaltyServiceWorker.AccountService.IAccountService>, RoyaltyServiceWorker.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ChangeLanguage(string codename) {
            base.Channel.ChangeLanguage(codename);
        }
        
        public System.Threading.Tasks.Task ChangeLanguageAsync(string codename) {
            return base.Channel.ChangeLanguageAsync(codename);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordResults GetImportQueueRecords(System.Guid accountId, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, uint pageIndex, uint itemsPerPage) {
            return base.Channel.GetImportQueueRecords(accountId, from, to, pageIndex, itemsPerPage);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResults> GetImportQueueRecordsAsync(System.Guid accountId, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to, uint pageIndex, uint itemsPerPage) {
            return base.Channel.GetImportQueueRecordsAsync(accountId, from, to, pageIndex, itemsPerPage);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordResult PutImportQueueRecord(RoyaltyServiceWorker.AccountService.ImportQueueRecord item) {
            return base.Channel.PutImportQueueRecord(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordResult> PutImportQueueRecordAsync(RoyaltyServiceWorker.AccountService.ImportQueueRecord item) {
            return base.Channel.PutImportQueueRecordAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResult RemovemportQueueRecord(System.Guid identifier) {
            return base.Channel.RemovemportQueueRecord(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RemovemportQueueRecordAsync(System.Guid identifier) {
            return base.Channel.RemovemportQueueRecordAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResults RemoveImportQueueRecordRange(System.Collections.Generic.List<System.Guid> identifiers) {
            return base.Channel.RemoveImportQueueRecordRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RemoveImportQueueRecordRangeAsync(System.Collections.Generic.List<System.Guid> identifiers) {
            return base.Channel.RemoveImportQueueRecordRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults ImportQueueRecordStates() {
            return base.Channel.ImportQueueRecordStates();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.ImportQueueRecordStateResults> ImportQueueRecordStatesAsync() {
            return base.Channel.ImportQueueRecordStatesAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults GetAdditionalColumns(System.Guid accountId) {
            return base.Channel.GetAdditionalColumns(accountId);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResults> GetAdditionalColumnsAsync(System.Guid accountId) {
            return base.Channel.GetAdditionalColumnsAsync(accountId);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult PutAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.PutAdditionalColumn(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> PutAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.PutAdditionalColumnAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult UpdateAdditionalColumn(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.UpdateAdditionalColumn(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumnResult> UpdateAdditionalColumnAsync(RoyaltyServiceWorker.AccountService.AccountDataRecordAdditionalColumn item) {
            return base.Channel.UpdateAdditionalColumnAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveAdditionalColumn(long identifier) {
            return base.Channel.RemoveAdditionalColumn(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveAdditionalColumnAsync(long identifier) {
            return base.Channel.RemoveAdditionalColumnAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveAdditionalColumnsRange(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveAdditionalColumnsRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveAdditionalColumnsRangeAsync(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveAdditionalColumnsRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults GetAccountPhoneMark(System.Guid accountId, string filter, uint pageIndex, uint itemsPerPage) {
            return base.Channel.GetAccountPhoneMark(accountId, filter, pageIndex, itemsPerPage);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResults> GetAccountPhoneMarkAsync(System.Guid accountId, string filter, uint pageIndex, uint itemsPerPage) {
            return base.Channel.GetAccountPhoneMarkAsync(accountId, filter, pageIndex, itemsPerPage);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult PutAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.PutAccountPhoneMark(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> PutAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.PutAccountPhoneMarkAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult UpdateAccountPhoneMark(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.UpdateAccountPhoneMark(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountPhoneMarkResult> UpdateAccountPhoneMarkAsync(RoyaltyServiceWorker.AccountService.AccountPhoneMark item) {
            return base.Channel.UpdateAccountPhoneMarkAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveAccountPhoneMark(long identifier) {
            return base.Channel.RemoveAccountPhoneMark(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveAccountPhoneMarkAsync(long identifier) {
            return base.Channel.RemoveAccountPhoneMarkAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveAccountPhoneMarkRange(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveAccountPhoneMarkRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveAccountPhoneMarkRangeAsync(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveAccountPhoneMarkRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults GetSeriesOfNumbers(System.Guid accountId) {
            return base.Channel.GetSeriesOfNumbers(accountId);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResults> GetSeriesOfNumbersAsync(System.Guid accountId) {
            return base.Channel.GetSeriesOfNumbersAsync(accountId);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult PutSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.PutSeriesOfNumbers(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> PutSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.PutSeriesOfNumbersAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult UpdateSeriesOfNumbers(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.UpdateSeriesOfNumbers(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecordResult> UpdateSeriesOfNumbersAsync(RoyaltyServiceWorker.AccountService.AccountSeriesOfNumbersRecord item) {
            return base.Channel.UpdateSeriesOfNumbersAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult RemoveSeriesOfNumbers(long identifier) {
            return base.Channel.RemoveSeriesOfNumbers(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> RemoveSeriesOfNumbersAsync(long identifier) {
            return base.Channel.RemoveSeriesOfNumbersAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults RemoveSeriesOfNumbersRange(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveSeriesOfNumbersRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> RemoveSeriesOfNumbersRangeAsync(System.Collections.Generic.List<long> identifier) {
            return base.Channel.RemoveSeriesOfNumbersRangeAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsResult RESTSettingsUpdate(RoyaltyServiceWorker.AccountService.AccountSettings item) {
            return base.Channel.RESTSettingsUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsResult> RESTSettingsUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettings item) {
            return base.Channel.RESTSettingsUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsResult SettingsUpdate(RoyaltyServiceWorker.AccountService.AccountSettings item) {
            return base.Channel.SettingsUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsResult> SettingsUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettings item) {
            return base.Channel.SettingsUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult SettingsSheduleTimePut(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.SettingsSheduleTimePut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> SettingsSheduleTimePutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.SettingsSheduleTimePutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult SettingsSheduleTimeUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.SettingsSheduleTimeUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTimeResult> SettingsSheduleTimeUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsSheduleTime item) {
            return base.Channel.SettingsSheduleTimeUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsSheduleTimeRemove(long identifier) {
            return base.Channel.SettingsSheduleTimeRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsSheduleTimeRemoveAsync(long identifier) {
            return base.Channel.SettingsSheduleTimeRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsSheduleTimeRemoveRange(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsSheduleTimeRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsSheduleTimeRemoveRangeAsync(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsSheduleTimeRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult SettingsExportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.SettingsExportDirectoryPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> SettingsExportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.SettingsExportDirectoryPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult SettingsExportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.SettingsExportDirectoryUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectoryResult> SettingsExportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsExportDirectory item) {
            return base.Channel.SettingsExportDirectoryUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsExportDirectoryRemove(long identifier) {
            return base.Channel.SettingsExportDirectoryRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsExportDirectoryRemoveAsync(long identifier) {
            return base.Channel.SettingsExportDirectoryRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsExportDirectoryRemoveRange(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsExportDirectoryRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsExportDirectoryRemoveRangeAsync(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsExportDirectoryRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult SettingsImportDirectoryPut(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.SettingsImportDirectoryPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> SettingsImportDirectoryPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.SettingsImportDirectoryPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult SettingsImportDirectoryUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.SettingsImportDirectoryUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectoryResult> SettingsImportDirectoryUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsImportDirectory item) {
            return base.Channel.SettingsImportDirectoryUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsImportDirectoryRemove(long identifier) {
            return base.Channel.SettingsImportDirectoryRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsImportDirectoryRemoveAsync(long identifier) {
            return base.Channel.SettingsImportDirectoryRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsImportDirectoryRemoveRange(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsImportDirectoryRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsImportDirectoryRemoveRangeAsync(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsImportDirectoryRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult SettingsColumnPut(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.SettingsColumnPut(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> SettingsColumnPutAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.SettingsColumnPutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult SettingsColumnUpdate(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.SettingsColumnUpdate(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnsResult> SettingsColumnUpdateAsync(RoyaltyServiceWorker.AccountService.AccountSettingsColumn item) {
            return base.Channel.SettingsColumnUpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResult SettingsColumnRemove(long identifier) {
            return base.Channel.SettingsColumnRemove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResult> SettingsColumnRemoveAsync(long identifier) {
            return base.Channel.SettingsColumnRemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.LongExecutionResults SettingsColumnRemoveRange(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsColumnRemoveRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.LongExecutionResults> SettingsColumnRemoveRangeAsync(System.Collections.Generic.List<long> identifiers) {
            return base.Channel.SettingsColumnRemoveRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults GetColumnMarks() {
            return base.Channel.GetColumnMarks();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsMarkResults> GetColumnMarksAsync() {
            return base.Channel.GetColumnMarksAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults GetColumnTypes() {
            return base.Channel.GetColumnTypes();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountSettingsColumnTypeResults> GetColumnTypesAsync() {
            return base.Channel.GetColumnTypesAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResults GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult Get(System.Guid identifier) {
            return base.Channel.Get(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> GetAsync(System.Guid identifier) {
            return base.Channel.GetAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResults GetRange(System.Collections.Generic.List<System.Guid> identifiers) {
            return base.Channel.GetRange(identifiers);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResults> GetRangeAsync(System.Collections.Generic.List<System.Guid> identifiers) {
            return base.Channel.GetRangeAsync(identifiers);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult Put(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.Put(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> PutAsync(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.PutAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.AccountResult Update(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.Update(item);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.AccountResult> UpdateAsync(RoyaltyServiceWorker.AccountService.Account item) {
            return base.Channel.UpdateAsync(item);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResult Remove(System.Guid identifier) {
            return base.Channel.Remove(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResult> RemoveAsync(System.Guid identifier) {
            return base.Channel.RemoveAsync(identifier);
        }
        
        public RoyaltyServiceWorker.AccountService.GuidExecutionResults RemoveRange(System.Collections.Generic.List<System.Guid> identifier) {
            return base.Channel.RemoveRange(identifier);
        }
        
        public System.Threading.Tasks.Task<RoyaltyServiceWorker.AccountService.GuidExecutionResults> RemoveRangeAsync(System.Collections.Generic.List<System.Guid> identifier) {
            return base.Channel.RemoveRangeAsync(identifier);
        }
    }
}
